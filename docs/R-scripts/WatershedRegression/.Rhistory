}
(show_results(1))
zn = (show_results(1))
View(zn)
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels,use.viewer = TRUE ))
(tabs)
}
zn = (show_results(1))
zn = (show_results(1))
zn
View(zn)
View(zn)
zn.knitr
zn$knitr
`<table style=\"border-collapse:collapse; border:none;\">\n<caption style=\"font-weight: bold; text-align:left;\">Zinc - Water - Total</caption>\n<tr>\n<th style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm;  text-align:left; \">&nbsp;</th>\n<th colspan=\"3\" style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; \">linear</th>\n<th colspan=\"3\" style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; \">log-linear</th>\n<th colspan=\"3\" style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; \">linear seasonal</th>\n<th colspan=\"3\" style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; \">log-linear seasonal</th>\n</tr>\n<tr>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  text-align:left; \">Predictors</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">Estimates</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">CI</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">p</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">Estimates</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">CI</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  col7\">p</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  col8\">Estimates</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  col9\">CI</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  0\">p</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  1\">Estimates</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  2\">CI</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  3\">p</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">(Intercept)</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">92.44</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">67.34&nbsp;&ndash;&nbsp;117.55</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">4.04</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">3.65&nbsp;&ndash;&nbsp;4.43</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col7\"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col8\">77.16</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col9\">48.87&nbsp;&ndash;&nbsp;105.45</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  0\"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  1\">4.01</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  2\">3.62&nbsp;&ndash;&nbsp;4.41</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  3\"><strong>&lt;0.001</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">impervious</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">64.81</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">40.18&nbsp;&ndash;&nbsp;89.43</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col7\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col8\">63.37</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col9\">39.35&nbsp;&ndash;&nbsp;87.38</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  0\"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  1\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  2\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  3\"></td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">change_year_index</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">1.01</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">0.64&nbsp;&ndash;&nbsp;1.38</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col7\"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col8\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col9\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  0\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  1\">1.00</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  2\">0.64&nbsp;&ndash;&nbsp;1.37</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  3\"><strong>&lt;0.001</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">season [2]</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col7\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col8\">4.22</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col9\">-25.91&nbsp;&ndash;&nbsp;34.34</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  0\">0.784</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  1\">-0.06</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  2\">-0.26&nbsp;&ndash;&nbsp;0.13</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  3\">0.521</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">season [3]</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col7\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col8\">114.53</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col9\">78.88&nbsp;&ndash;&nbsp;150.17</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  0\"><strong>&lt;0.001</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  1\">0.39</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  2\">0.16&nbsp;&ndash;&nbsp;0.62</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  3\"><strong>0.001</strong></td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">season [4]</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col7\"></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col8\">7.93</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  col9\">-16.74&nbsp;&ndash;&nbsp;32.60</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  0\">0.529</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  1\">0.00</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  2\">-0.16&nbsp;&ndash;&nbsp;0.16</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  3\">0.981</td>\n</tr>\n<tr>\n<td colspan=\"13\" style=\"font-weight:bold; text-align:left; padding-top:.8em;\">Random Effects</td>\n</tr>\n\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">&sigma;<sup>2</sup></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">12496.95</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.47</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">11366.26</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.46</td>\n\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">&tau;<sub>00</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">1809.55 <sub>Location</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.47 <sub>Location</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">1739.85 <sub>Location</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.46 <sub>Location</sub></td>\n\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">ICC</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.13</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.50</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.13</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.50</td>\n\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">N</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">14 <sub>Location</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">14 <sub>Location</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">14 <sub>Location</sub></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">14 <sub>Location</sub></td>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm; border-top:1px solid;\">Observations</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;\" colspan=\"3\">414</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;\" colspan=\"3\">414</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;\" colspan=\"3\">414</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;\" colspan=\"3\">414</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">Marginal R<sup>2</sup> / Conditional R<sup>2</sup></td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.229 / 0.326</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.484 / 0.741</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.290 / 0.384</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.491 / 0.745</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">AIC</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">5095.101</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">920.051</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">5038.048</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">920.701</td>\n</tr>\n\n</table>\n`
?tab_model
kable(zn$knitr)
kable(zn$knitr)
tableprint = (zn$knitr)
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels,use.viewer = TRUE ))
kable(tabs$knitr) #displays the table inline
}
zn = (show_results(1))
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print.AsIs(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
knit(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
knit2html(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
knit2html(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
unlink('Part1_stormwater_linear_mixed_models_cache', recursive = TRUE)
#rm(list = ls())
#set the working directory
#setwd("~/repos/stormwaterheatmap/R-scripts/WatershedRegression")
#load packages
library(knitr)
library(tidyverse)
library(car)
library(caret)
library(psych)
library(DataExplorer)
library(dplyr)
library(readr)
library(lme4)
library(nlme)
library(hrbrthemes)
library(sjPlot)
library(Metrics)
## Global options
opts_chunk$set(prompt=FALSE,
message=FALSE,
warning=FALSE)
options(scipen = 1, digits = 3)
#set seed for reproducibility
set.seed(50)
all.S8.data <- read.csv("data/S8_data.csv",
stringsAsFactors = FALSE )
#filter out rejected data
all.S8.data <- (filter(all.S8.data,!result_data_qualifier %in% 'REJ'))
#filter out replicates
all.S8.data <- (filter(all.S8.data,!sample_replicate_flag %in% 'Y'))
#change nondetect warnings to detects
warnings <- all.S8.data$nondetect_flag == "WARNING"
all.S8.data$nondetect_flag[warnings] <- FALSE
#Change NA to detect
all.S8.data$nondetect_flag[is.na(all.S8.data$nondetect_flag)] <- FALSE
#Change season to factor
all.S8.data$season <- as.factor(all.S8.data$season)
#Select Parameters
params <- c('Zinc - Water - Total',
'Copper - Water - Total',
'Nitrite-Nitrate - Water - Dissolved',
'Lead - Water - Total',
'Total Phosphorus - Water - Total',
'Total Suspended Solids - Water - Total',
'Total Phthalate - Water - Total',
'Total PAH - Water - Total',
#'Chrysene - Water - Total',
'CPAH - Water - Total',
'HPAH - Water - Total'
#'Total Kjeldahl Nitrogen - Water - Total',
#'Total PCB - Water - Total'
)
#save a list of all the parameters in case we want to use mor.
params.all <- data.frame(unique(all.S8.data$parameter))
s8data <- all.S8.data
kable(params,col.names = "Constituents of concern")
#
s8data <- all.S8.data %>%
dplyr::select(
study_name,
location_id,parameter,
type,
season,
new_result_value,
nondetect_flag,
study_id,
access_id,
field_collection_end_date,
field_collection_start_date,
type)
#rename some columns
colnames(s8data)[colnames(s8data) == "location_id"] <- "Location"
colnames(s8data)[colnames(s8data) == "new_result_value"] <-
"concentration"
s8data$nondetect_flag <- as.logical(s8data$nondetect_flag)
s8data$concentration <- as.numeric(s8data$concentration)
#make a function for scatter plots
scatter_cocs <- function(df.coc,title) {
p <- ggplot(df.coc, aes(1, concentration)) + geom_jitter() + labs(
title = title,
subtitle = "Data collected 2009-2013",
caption =
" Data source: Ecology, 2015",
x = "Observations"
#y = y.title
)
p + facet_wrap( ~ parameter, scales = 'free')+theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
}
scatter_cocs(s8data[which(s8data$parameter %in% params),],'All Observations')
#remove and replot
outlierParams <- c("Total Suspended Solids - Water - Total", "Total Phosphorus - Water - Total", "Nitrite-Nitrate - Water - Dissolved")
#This removes the highest values
outlierVals <-
top_n(group_by(s8data[which(s8data$parameter %in% outlierParams), ], parameter), 1, concentration)$concentration
s8data <- s8data %>%
group_by(parameter) %>%
slice(which(!(
parameter %in% outlierParams & concentration %in% outlierVals
)))
scatter_cocs(s8data[which(s8data$parameter %in% params),],'All Observations - Outliers Removed')
#Spatial predcitors have been extracted and saved as a csv file.
#spatial_data<-read_csv("data/spatialPredictors_4_13.csv", col_types = cols(X1 = col_skip()))
spatial_data <- read_csv("data/spatialPredictors_5_14.csv")
#RES and COM are compositional data. Change to a ratio
spatial_data$LU_ratio = spatial_data$COM/spatial_data$RES
spatial_data <- dplyr::select(spatial_data, -c(RES,COM,.geo))
#merge spatial predictors with monitoring data
s8data.wPredictors <<- merge(s8data, spatial_data)%>%
dplyr::select(-c(depSplusN))
kable(head(s8data.wPredictors),caption = "S8 Monitoring Data")
getBaseFormula <- function(df.coc) {
#Function to make a formula for prediction
predictors <- df.coc %>%
select_if(is.numeric) %>%
dplyr::select(-c(concentration, access_id)) %>%
colnames()
return(as.formula(paste(
"(concentration) ~",  (paste((predictors),  collapse = " + ")), " + (1|Location)"
)))
}
plot_s8 <- function(coc) {
df.coc <- (base::subset(s8data.wPredictors,
parameter == coc))
#plot the data to inspect
plot <- ggplot(data=(df.coc))+geom_point(aes(x=Location,y=concentration),alpha = 0.5, color = "#0088a3")+scale_y_log10()+labs(
y = "Concentration (µg/L)",
x = "Location",
title =  "Measured Concentrations",
subtitle = coc ) + theme( axis.text.x = element_text(angle=90, size = 9))
return(plot)
}
# #Calculate variance-inflation factors.
#
# calc_vif_base <- function(coc) {
#   df.coc <- (base::subset(s8data.wPredictors,
#                 parameter == coc))
#   base_formula <- getBaseFormula(df.coc)#returns a formula with all predictors
#   model.1 <<- lmer(base_formula, data = df.coc, na.action = na.omit)
#   v <- sort(vif(model.1),decreasing=TRUE)
#   return(v)
#   #kable(v,caption="Variance Inflation Factors - not filtered") #display the vif of the dataset
# }
## *Check VIF
check_vif <- function(coc) {
df.coc <- (base::subset(s8data.wPredictors,
parameter == coc))
base_formula <- getBaseFormula(df.coc)#returns a formula with all predictors
model.1 <- lmer(base_formula, data = df.coc, na.action = na.omit) #make into a lmer object
v <- sort(vif(model.1),decreasing=TRUE)
#if the VIF of the highest ranked predictor is >10 then iteratively remove
model_object <- model.1 #start with model object as the base model (all predictors included)
for (i in 1:20) {
interim_v <- sort(vif(model_object), decreasing = TRUE)
if (max(interim_v) < 10) {
break
}
predictor_to_drop = as.name(names(interim_v)[which(interim_v == max(interim_v))])
model_object <-
stats::update(model_object, paste(".~ . -", predictor_to_drop))
}
m1Terms <- (labels(terms(model.1)))
m2Terms <- labels(terms(model_object))
#compare the terms to get a list of the dropped terms
droppedTerms <- setdiff(m1Terms, m2Terms)
#make a list of selected predictors
predictors <- m2Terms#colnames(model.frame(model_object))
#filter df.coc to remove dropped terms.
df.coc = dplyr::select(df.coc, -(droppedTerms))
return(list("vif" = interim_v,"dropped" = droppedTerms,"predictors" = predictors))
#kable(droppedTerms,caption = "These terms were dropped")
#kable(interim_v,caption="Variance Inflation Factors - multicolinear factors dropped")
}
## Stepwise Selection
#forward_selection(TRUE,coc,model_info$predictors)
# Extract the model that step found:
#perform forward selection on model parameters. First for non-transformed data, then for log-transformed data
forward_selection <- function(seasonal.bin, coc,predictors) {
#seasonal.bin = binary (T/F) if seasonal model should be used
library(lmerTest)
#make this a lmer object
df.coc <- (base::subset(s8data.wPredictors,
parameter == coc))
model_object_formula <- as.formula(paste(
"concentration ~",  (paste((predictors),  collapse = " + ")), " + (1|Location)"))
model_object <- lmer(model_object_formula,data=df.coc)
step.2 <-  lmerTest::step(model_object,reduce.random=FALSE,data=df.coc)
step.2.log <- lmerTest::step(stats::update(model_object, log(concentration)~.))
#extract the models
model.3 <- get_model(step.2)
model.3.log <- get_model(step.2.log)
#perform forward selection on model parameters, this time add seasonality . First for non-transformed data, then for log-transformed data
step.4 <- lmerTest::step(stats::update(model_object,.~.+season))
step.4.log <- lmerTest::step(stats::update(model_object,log(concentration) ~.+season))
model.4 <- get_model(step.4)
model.4.log <- get_model(step.4.log)
#get formulas
model.3.formula <- as.formula(model.3@call$formula)
model.3.log.formula <- as.formula(model.3.log@call$formula)
model.4.formula <- as.formula(model.4@call$formula)
model.4.log.formula <- as.formula(model.4.log@call$formula)
#detach lmer test and remove the models. Keep the formulas.
detach("package:lmerTest", unload=TRUE)
rm(model.3,model.3.log,model.4,model.4.log)
#use lmer for performing modeling
#calculate base model
df.coc <- (base::subset(s8data.wPredictors,
parameter == coc))
model.base <- lmer(model_object_formula,data=df.coc)
model <- lmer(model.3.formula,data=df.coc)
log_model<-  lmer(model.3.log.formula,data=df.coc)
if(seasonal.bin) {
#if seasonal model switch is on, calc seasonal models
model_with_seasonality <- lmer(model.4.formula,data=df.coc)
model_with_seasonality_log <- lmer(model.4.log.formula,data=df.coc)
#add to list
modelList <- c(model,log_model,model_with_seasonality,model_with_seasonality_log)
}
else {
modelList <-c(model,log_model)
modelLables <-c('linear','log-linear')
}
return(modelList)#,show.aic = TRUE)# = FALSE, title=coc, dv.labels = modelLables)
# #make a table of coefficients
# tab_model(modelList,
#   model_log,
#   model_with_seasonality,
#   model.with_seasonality_log,
#   show.aic = TRUE,auto.label = FALSE, title=coc, dv.labels = c('linear','log-linear','linear seasonal','log-linear seasonal'))#file=paste0("results/",coc,".html"))
}
results = c()
plots = c()
vifs = c()
tabs = c()
for (i in 1:length(params)){
coc = params[i]
df.coc <- (base::subset(s8data.wPredictors,
parameter == coc))
plots[[coc]] <- plot_s8(coc)
model_info <- check_vif(coc)
vifs[[coc]] <- model_info$vif
results[[coc]] = forward_selection(TRUE,coc,model_info$predictors)}
modelLabels <-c('linear','log-linear','linear seasonal','log-linear seasonal')
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 1:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
show_results(3)
(show_results(1))
?qqmath
results
results[[2]]
show_results <- function(j){
#get parameter label
lab = names(results)[j]
#plot observed
print(plots[[j]])
#show variance inflation factors
print(kable(vifs[[j]],caption = paste("Variance inflation factors",lab),col.names = c("vif")))
#show raw summary of results
models <- results[[j]]
for (k in 2:2){
print((summary(models[[k]])))
#plot(models[[k]],,main=paste(lab,"\n","Resididuals"))
print(qqmath(models[[k]],main=paste(lab,"\n",modelLabels[k],"\n","QQ plot of resididuals")))
}
#formatted table of results
tabs = (tab_model(models,title=lab,show.aic = TRUE,dv.labels =modelLabels))
kable(tabs$knitr) #displays the table inline
}
(show_results(1))
#make a function for scatter plots
scatter_cocs <- function(df.coc,title) {
p <- ggplot(df.coc, aes(1, concentration)) + geom_jitter() + labs(
title = title,
subtitle = "Data collected 2009-2013",
caption =
" Data source: Ecology, 2015",
x = "Observations"
#y = y.title
)+
theme_ipsum_rc()
p + facet_wrap( ~ parameter, scales = 'free')+theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
}
scatter_cocs(s8data[which(s8data$parameter %in% params),],'All Observations')
(show_results(1))
plot_s8 <- function(coc) {
df.coc <- (base::subset(s8data.wPredictors,
parameter == coc))
#plot the data to inspect
plot <- ggplot(data=(df.coc))+geom_point(aes(x=Location,y=concentration),alpha = 0.5, color = "#0088a3")+scale_y_log10()+labs(
y = "Concentration (µg/L)",
x = "Location",
title =  "Measured Concentrations",
subtitle = coc ) + theme_ipsum_rc()
return(plot)
}
(show_results(1))
#plot the data to inspect
plot <- ggplot(data=(df.coc))+geom_point(aes(x=Location,y=concentration))+scale_y_log10()+labs(
y = "Concentration (µg/L)",
x = "Location",
title =  "Measured Concentrations",
subtitle = coc ) + theme_ipsum_rc()
results[[3]]
show_results(4)
