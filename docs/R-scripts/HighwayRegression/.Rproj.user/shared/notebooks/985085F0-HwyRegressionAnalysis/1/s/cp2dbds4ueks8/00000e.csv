"0","showResults <- function(coc,mcmc_results,cocName) {"
"0","   df <- (subset(hwyData, `T Pcode` == coc)) %>%"
"0","    add_surv()"
"0","   "
"0","  training_predictions <- data.frame(#predicted = exp("
"0","    (predict(mcmc_results, interval = ""confidence"")))"
"0","  "
"0","  training_predint <-"
"0","    cbind(df,"
"0","          data.frame(predict(mcmc_results, interval = ""prediction"")))"
"0","  "
"0","  model.compare.predictions <-"
"0","    cbind(df,"
"0","          training_predictions)"
"0","  "
"0","  predictPlot <- ggplot(model.compare.predictions) + geom_abline() +"
"0","    geom_ribbon(aes(x = fit, ymin = lwr, ymax = upr), alpha = 0.1) +"
"0","    geom_ribbon(data = training_predint,"
"0","                aes(x = fit, ymin = lwr, ymax = upr),"
"0","                alpha = 0.4) +"
"0","    geom_point(aes(x = fit, y = log(EMC)),fill='white', alpha = 0.1) + "
"0","    "
"0","   #scale_y_log10()+scale_x_log10()+"
"0","    labs("
"0","      x = ""Predicted Concentration ( µg/L)"","
"0","      y = ""Measured Concentration ( µg/L)"","
"0","      title =  ""Predicted vs. Measured Concentrations"","
"0","      subtitle = cocName,"
"0","      caption = ""Data from Granato, G.E., 2019, Highway-Runoff Database (HRDB) Version 1.1.0: \n U.S. Geological Survey data release, https://doi.org/10.5066/P94VL32J."")"
"0",""
"0","  regression_plot <-ggplot(model.compare.predictions) + "
"0","    geom_boxplot(aes(y = log(EMC), x = ADT, group = Location),alpha = 0.8, outlier.alpha = 0.1) +"
"0","    geom_point(aes(y = log(EMC), x = ADT, color = State), alpha = 0.4) +"
"0","     "
"0","    geom_line(aes(y = fit, x = ADT), color = 'red',alpha = 0.8) +scale_x_log10()"
"0","    "
"0","    "
"0","  solution_summary<-(summary(mcmc_results))"
"0","  "
"0","  #bayes plots "
"0","  "
"0","  #show uncertainty intervals under esimated posterior density curves "
"0","plot.1 <- mcmc_areas(mcmc_results$Sol,prob = 0.80, pprob_outer = 0.95,point_est=""mean"")+ggplot2::labs(title = coc, subtitle   = ""Posterior distributions with medians and 80% intervals"")"
"0",""
"0","#generate scatter plot of predictions "
"0",""
"0",""
"0",""
"0",""
"0",""
"0","  "
"0","  return(list(regression_plot, predictPlot, solution_summary, plot.1))"
"0","}"
