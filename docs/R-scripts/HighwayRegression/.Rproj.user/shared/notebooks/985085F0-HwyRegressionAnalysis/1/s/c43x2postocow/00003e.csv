"0","library (MCMCglmm)"
"0","mcmc_calc <- function(coc.local,trans.bin) {"
"0","  #get linear models"
"0","  #selected_model <- compare_linear_models(x)[model_num][[1]]  #this runs the linear model selection"
"0","  df <- as.data.frame(subset(hwyData, `T Pcode` == coc.local))%>% "
"0","    add_surv()"
"0",""
"0",""
"0","#make the prior_structures "
"0","prior.1<-list(R=list(V=1, fix=1), G=list(G1=list(V=1, nu=0.02)))"
"0","prior.2<-list(R=list(V=2, fix=1), G=list(G1=list(V=1, nu=0)))"
"0",""
"0",""
"0",""
"0","if (trans.bin) {"
"0","mcmc_formula <-"
"0","      as.formula("
"0","         ""cbind(cenMin_log, cenMax_log) ~  log(ADT) """
"0","      )}"
"0","else {"
"0","  mcmc_formula <-"
"0","      as.formula("
"0","         ""cbind(cenMin_log, cenMax_log) ~  ADT """
"0","      )"
"0","}"
"0",""
"0","mcmc_results <-"
"0","    MCMCglmm("
"0","      mcmc_formula,"
"0","      random = ~  Location,"
"0","      data =  df, "
"0","      family = ""cengaussian"","
"0","      verbose = FALSE, prior = prior.1,  singular.ok = TRUE,"
"0","      nitt = 40000, thin = 13, burnin = 10000"
"0","    )"
"0","    return((mcmc_results))"
"0","}"
"0",""
"0",""
"0",""
"0",""
"0",""
