SUM(hru221)/30 AS hru221,
SUM(hru222)/30 AS hru222,
SUM(hru250)/30 AS hru250,
SUM(hru251)/30 AS hru251,
SUM(hru252)/30 AS hru252,
FROM
`tnc-data-v1.hydrology.gfdl`
WHERE
year between 1970 and 1999
AND comp != 'agwo'
group by grid
"
billing <- "tnc-data-v1"
tb <- bq_project_query(billing, quant_sql)
meanQ <- bq_table_download(tb, max_results = Inf)
meanQ <- meanQ[meanQ$grid != "",]
hruNames <- read_csv("C:/Users/cnilsen/Documents/repos/stormwaterheatmap/R-scripts/hydrology/data/hrus.csv",
col_names = TRUE)
Q <-   pivot_longer(meanQ, -grid, names_to="hru", values_to="MeanQ")%>%
merge(hruNames,by.x="hru",by.y = "name")
plot <- ggplot(subset(Q, Landuse %in% c("Forest","Lawn","Pasture"),))+
#subset(Q, Soil %in% c("Outwash")),)+
geom_boxplot(#geom_boxplot(
aes(y=MeanQ, x=Slope,fill=Slope),alpha=0.8)+facet_grid(~Landuse)+#scale_y_log10()+
ylab("Mean Annual Runoff (mm/year) 1970-1999")+theme_ipsum()+scale_color_ipsum()+scale_fill_ipsum()
p <- plot %+% subset(Q, Soil =="Outwash",)+ggtitle("Outwash Soils")+scale_y_log10()
p
plot %+% subset(Q, Soil =="Till",)+ggtitle("Till Soils")+scale_y_log10()
plot %+% subset(Q, Soil =="Saturated",)+ggtitle("Saturated Soils")+scale_y_log10()
plot <- ggplot(subset(Q, Landuse %in% c("Impervious")),)+geom_boxplot(aes(x=Slope,y=MeanQ, fill = Slope),alpha=0.8)+facet_wrap(vars(Soil))+scale_y_log10()+ylab("Mean Annual Runoff (mm/year) 1970-1999")++scale_color_ipsum()+scale_fill_ipsum()
plot <- ggplot(subset(Q, Landuse %in% c("Impervious")),)+geom_boxplot(aes(x=Slope,y=MeanQ, fill = Slope),alpha=0.8)+facet_wrap(vars(Soil))+scale_y_log10()+ylab("Mean Annual Runoff (mm/year) 1970-1999")+scale_color_ipsum()+scale_fill_ipsum()
plot
update_geom_font_defaults(family = "Arial Narrow",face = "plain",size=3.5)
exampleFlowDuration <- read_csv("data/exampleFlowDuration_tidy.csv")
head(exampleFlowDuration)
threshMax = 31
threshMin = 8
update_geom_font_defaults()
fdurSubset <-
subset(exampleFlowDuration, Q >= threshMin & Q <= threshMax)
ggplot(exampleFlowDuration) +
geom_ribbon(data = fdurSubset, aes(ymin = 0, ymax = P, x = Q,fill=(Scenario)),alpha = 0.2)+facet_wrap(~Scenario,as.table =TRUE)+
geom_line(aes(x = Q, y = P, color = Scenario)) +
geom_vline(xintercept = threshMin, linetype = 2) + geom_text(
aes(
x = threshMin,
y = .33,
angle = 90,
label = "low-flow threshold"
),
nudge_x = -1.5,
hjust = "left",
color = "#323232"
) +
geom_vline(xintercept = threshMax, linetype = 2) + geom_text(
aes(
x = threshMax,
y = .33,
angle = 90,
label = "high-flow threshold"
),
nudge_x = -1.5,
hjust = "left",
color = "#323232"
) + theme(legend.position = "none",
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
#axis.ticks.x=element_blank(),
axis.line = element_line(linetype =1),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())+scale_color_ipsum()+scale_fill_ipsum()+xlab("Discharge")+ylab("Exceedance Probability")+scale_y_continuous(expand = c(0,0),limits = c(0,NA))
p <- plot %+% subset(Q, Soil =="Outwash",)+ggtitle("Outwash Soils")+scale_y_log10()
p
plot+ggtitle("Outwash Soils")+scale_y_log10()
plot+ggtitle("Outwash Soils")+scale_y_log10()+facet_wrap(Soil)
plot+ggtitle("Outwash Soils")+scale_y_log10()+facet_wrap(~Soil)
plot
plot <- ggplot(subset(Q, Landuse %in% c("Forest","Lawn","Pasture"),))+
#subset(Q, Soil %in% c("Outwash")),)+
geom_boxplot(#geom_boxplot(
aes(y=MeanQ, x=Slope,fill=Slope),alpha=0.8)+facet_grid(~Landuse)+#scale_y_log10()+
ylab("Mean Annual Runoff (mm/year) 1970-1999")+theme_ipsum()+scale_color_ipsum()+scale_fill_ipsum()
plot
plot+facet_wrap(Soil)
plot+facet_wrap(~Soil)
plot+facet_wrap(~Soil,scales = "free")
plot+facet_wrap(~Soil,scales = "free")+scale_y_log10()
p
plot+facet_wrap(~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
p <- plot %+% subset(Q, Soil =="Outwash",)+ggtitle("Outwash Soils")
plot+facet_wrap(~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
p
plot+facet_wrap(~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
```{r fig.height=7, fig.width=5}
plot+facet_wrap(~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse+Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(~Landuse+Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Landuse+Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_grid(Landuse~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Soil,scales = "free")+scale_y_log10()+theme(legend.position = "none")
plot+facet_wrap(Landuse~Soil)+scale_y_log10()+theme(legend.position = "none")
plot <- ggplot(Q)+#subset(Q, Landuse %in% c("Forest","Lawn","Pasture"),))+
#subset(Q, Soil %in% c("Outwash")),)+
geom_boxplot(#geom_boxplot(
aes(y=MeanQ, x=Slope,fill=Slope))+facet_grid(~Landuse)+#scale_y_log10()+
ylab("Mean Annual Runoff (mm/year) 1970-1999")+theme_ipsum()+scale_color_ipsum()+scale_fill_ipsum()
plot+facet_wrap(Landuse~Soil)+scale_y_log10()+theme(legend.position = "none")
plot <- ggplot(subset(Q, Landuse %in% c("Forest","Lawn","Pasture"),))+
#subset(Q, Soil %in% c("Outwash")),)+
geom_boxplot(#geom_boxplot(
aes(y=MeanQ, x=Slope,fill=Slope))+facet_grid(~Landuse)+#scale_y_log10()+
ylab("Mean Annual Runoff (mm/year) 1970-1999")+theme_ipsum()+scale_color_ipsum()+scale_fill_ipsum()
plot <- ggplot(subset(Q, Landuse %in% c("Forest","Lawn","Pasture"),))+
#subset(Q, Soil %in% c("Outwash")),)+
geom_boxplot(#geom_boxplot(
aes(y=MeanQ, x=Slope,fill=Slope))+facet_grid(~Landuse)+#scale_y_log10()+
ylab("Mean Annual Runoff (mm/year) 1970-1999")+theme_ipsum()+scale_color_ipsum()+scale_fill_ipsum()
plot+facet_wrap(Landuse~Soil)+scale_y_log10()+theme(legend.position = "none")
runoffPlots <- function (gridName, cigPrecip.df,location) {
BQ_runoff <- subset(AnnualQEverettSeatacTacoma, grid == gridName,)
head(BQ_runoff)
summaryP <-
(dplyr::select(BQ_runoff, starts_with("hru")) / cigPrecip.df$x) %>%
cbind(years) %>%
pivot_longer(cols = starts_with("hru"),
names_to = "hru",
values_to = "Q.mm") %>%
merge(hrus, by.x = "hru", by.y = "name")
outwash = subset(summaryP, Soil ==
"Outwash")
Saturated = subset(summaryP, Soil ==
"Saturated")
Till = subset(summaryP, Soil ==
"Till")
impervious = subset(summaryP, Landuse ==
"Impervious")
titlepart = paste("HSPY model results - ",location,", WA \nRunoff as a percentage of rainfall")
subPlots <- ggplot(summaryP) +
geom_col(aes(x = years, y = Q.mm), position = "dodge") +
facet_grid(Landuse ~ Slope) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
ylab("Annual runoff / Annual Precipitation") +
labs(subtitle = titlepart) +
theme_ipsum()+scale_color_ipsum()+scale_fill_ipsum()
return(list(subPlots %+% outwash + ggtitle("Outwash Soils"),
subPlots %+% Till + ggtitle("Till Soils"),
subPlots %+% Saturated + ggtitle("Saturated Soils"),
subPlots %+% impervious + ggtitle("Impervious")))
}
hrus <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/hrus.csv")
library(readr)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
#sum components of bq data
BQ_daily <- aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
ggplot(madsen_creek_daily_BQ)+geom_line(aes(x=Date,y=cfs),color="red",alpha=0.5)+geom_line(data = kc_daily,
aes(x=`Collect Date (local)`, y = `Discharge (cfs)`),color="blue")
library(readr)
library(tidyverse)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
#sum components of bq data
BQ_daily <- aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
#ggplot(madsen_creek_daily_BQ)+geom_line(aes(x=Date,y=cfs),color="red",alpha=0.5)+geom_line(data = kc_daily,
#                                                                    aes(x=`Collect Date (local)`, y = `Discharge (cfs)`),color="blue")
library(hydroTSM)
kc_fdc <- fdc(kc_daily$`Discharge (cfs)`,ylim = c(2,100),xlim=c(0,0.5))
bq_fdc <- fdc(BQ_daily$cfs,ylim = c(2,100),xlim=c(0,0.5))
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
common <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE)%>%
merge(madsen_wwhm_daily)
wwhm_fdc <- data.frame(fdc = fdc(madsen_wwhm_daily$X801.cfs))
library(hydroTSM)
kc_fdc <- fdc(kc_daily$`Discharge (cfs)`,ylim = c(2,100),xlim=c(0,0.5))
bq_fdc <- fdc(BQ_daily$cfs,ylim = c(2,100),xlim=c(0,0.5))
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
common <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE)
merge(madsen_wwhm_daily)
c2 <-  merge(common, madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
common <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)
?select
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
common <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(Date,measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(Date,measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
?fdc
fdc(allQs)
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fdc(allQs)
fdc(allQs, ylim = c(2,100),xlim=c(0.01,0.5),log="y")
fdc(allQs, ylim = c(3,100),xlim=c(0.01,0.5),log="y")
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ2.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
BQ_daily <- madsen_creek_daily_BQ# aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
library(hydroTSM)
kc_fdc <- fdc(kc_daily$`Discharge (cfs)`,ylim = c(2,100),xlim=c(0,0.5))
bq_fdc <- fdc(BQ_daily$cfs,ylim = c(2,100),xlim=c(0,0.5))
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
View(BQ_daily)
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ2.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
BQ_daily <- madsen_creek_daily_BQ# aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
#ggplot(madsen_creek_daily_BQ)+geom_line(aes(x=Date,y=cfs),color="red",alpha=0.5)+geom_line(data = kc_daily,
#                                                                    aes(x=`Collect Date (local)`, y = `Discharge (cfs)`),color="blue")
```{r}
library(hydroTSM)
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "Date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=Q))
View(BQ_daily)
View(BQ_daily)
BQ_daily$cfs <- BQ_daily*4.08734569e-7
BQ_daily$cfs <- BQ_daily$Q*4.08734569e-7
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fdc(allQs, ylim = c(3,100),xlim=c(0.01,0.5),log="y")
fdc(allQs, ylim = c(3,100),xlim=c(0.01,0.5),log="x")
fcdVals <- fdc(allQs, ylim = c(3,100),xlim=c(0.01,0.5),log="x")
View(fcdVals)
?pivot_longer
pivot_longer(fcdVals,names_to="model",values_to = "cfs")
pivot_longer(tibble(fcdVals),names_to="model",values_to = "cfs")
tidyFCD <- data.frame(fcdVals)
pivot_longer(tidyFCD,names_to="model",values_to = "cfs")
View(tidyFCD)
pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")
fcd_pivot <- pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")
tidyFCD <- data.frame(fcdVals)%>%
arrange(-cfs)
fcd_pivot <- pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")%>%
arrange(-cfs)
tidyFCD <- data.frame(fcdVals,.id="df")
tidyFCD <- data.frame(fcdVals,.id="df")%>%
mutate(df = LETTERS(as.numeric(df)])
tidyFCD <- data.frame(fcdVals,.id="df")%>%
mutate(df = LETTERS[(as.numeric(df)]))
tidyFCD <- data.frame(fcdVals,.id="df")%>%
mutate(df = LETTERS[as.numeric(df)])
tidyFCD <- data.frame(fcdVals,.id="dfid")%>%
mutate(df = LETTERS[as.numeric(dfid)])
tidyFCD <- data.frame(fcdVals,.id="dfid")%>%
mutate(df = LETTERS[as.numeric(dfid)])
tidyFCD <- data.frame(fcdVals,.id="dfid")%>%
mutate(df = LETTERS[as.numeric("dfid")])
tidyFCD <- data.frame(fcdVals,.id="dfid")%>%
mutate(dfid = LETTERS[as.numeric("dfid")])
fcdVals
fcdVals[1,]
fcdVals[,1]
tidyFCD <-bind_rows(fcdVals[,1],fcdVals[,2],fcdVals[,3], .id="dfid")%>%
mutate(dfid = LETTERS[as.numeric("dfid")])
tidyFCD <-bind_rows(fcdVals[,1],fcdVals[,2],fcdVals[,3], .id="df")%>%
mutate(df = LETTERS[as.numeric(df)])
tidyFCD <-bind_rows(fcdVals$measured,fcdVals[,2],fcdVals[,3], .id="df")%>%
mutate(df = LETTERS[as.numeric(df)])
tidyFCD <- data.frame(fcdVals)
fcd_pivot <-
pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")%>%
arrange(-cfs)%>%
group_by()
View(fcd_pivot)
fcd_pivot <-
pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fcdVals <- fdc(allQs, ylim = c(3,100),xlim=c(0.01,0.5),log="x")
fcdVals <- fdc(allQs, ylim = c(3,100),xlim=c(0.01,0.5),log="x")
tidyFCD <- data.frame(fcdVals)
fcd_pivot <-
pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")
fcdVals <- fdc(allQs, ylim = c(3,20),xlim=c(0.01,0.5),log="x")
fcdVals <- fdc(allQs, ylim = c(1,20),xlim=c(0.001,0.5),log="x")
fcdVals <- fdc(allQs, ylim = c(1,50),xlim=c(0.001,0.5),log="x")
fcdVals <- fdc(allQs, ylim = c(1,50),xlim=c(0.005,0.5),log="x")
fcdVals <- fdc(allQs, ylim = c(1,50),xlim=c(0.005,0.5),log="y")
fcdVals <- fdc(allQs, ylim = c(2,50),xlim=c(0.005,0.5),log="y")
fcdVals <- fdc(allQs,xlim=c(0.005,0.5),log="y")
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.5),log="y")
fcdVals <- fdc(allQs, ylim = c(3,100),xlim=c(0.005,0.5),log="y")
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.5),log="y")
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y")
fcdVals[,1]
?fdc
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",hQ.thr = 0.5)
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",hQ.thr = 0.5,Main = "Flow Duration Curve, Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,4,6,10))
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",hQ.thr = 0.5,Main = "Flow Duration Curve, Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10))
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",hQ.thr = 0.5,main = "Flow Duration Curve, Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve, Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve", sub = "Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve", caption = "Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve- Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
#madsen creek
#
library(readr)
library(tidyverse)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ2.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
#sum components of bq data
BQ_daily <- madsen_creek_daily_BQ# aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
BQ_daily$cfs <- BQ_daily$Q*4.08734569e-7
#ggplot(madsen_creek_daily_BQ)+geom_line(aes(x=Date,y=cfs),color="red",alpha=0.5)+geom_line(data = kc_daily,
#                                                                    aes(x=`Collect Date (local)`, y = `Discharge (cfs)`),color="blue")
library(hydroTSM)
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve- Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
#madsen creek
#
library(readr)
library(tidyverse)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
#sum components of bq data
BQ_daily <- madsen_creek_daily_BQ# aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
BQ_daily$cfs <- BQ_daily$Q*4.08734569e-7
#BQ_daily <- madsen_creek_daily_BQ#
BQ_daily <- aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
library(hydroTSM)
#madsen creek
#
library(readr)
library(tidyverse)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
#sum components of bq data
#BQ_daily <- madsen_creek_daily_BQ#
BQ_daily <- aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
#BQ_daily$cfs <- BQ_daily$Q*4.08734569e-7
#ggplot(madsen_creek_daily_BQ)+geom_line(aes(x=Date,y=cfs),color="red",alpha=0.5)+geom_line(data = kc_daily,
#                                                                    aes(x=`Collect Date (local)`, y = `Discharge (cfs)`),color="blue")
library(hydroTSM)
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
#BQ_daily <- madsen_creek_daily_BQ#
BQ_daily <- aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y="cfs",#by.y = "date",
all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y="cfs",#by.y = "date",
all.x = TRUE)
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y="Date",#by.y = "date",
all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve- Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
fcd_pivot <-
pivot_longer(tidyFCD,c("measured","wwhm","hspy"),names_to="model",values_to = "cfs")
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ3.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
library(readr)
library(tidyverse)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ3.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
View(madsen_creek_daily_BQ)
BQ_daily <- madsen_creek_daily_BQ# aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
BQ_daily$cfs <- BQ_daily$Q*4.08734569e-7
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve- Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
library(readr)
library(tidyverse)
kc_daily <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/Hydrology_PUQEW.csv",
col_types = cols(`Collect Date (local)` = col_date(format = "%m/%d/%Y")))
madsen_creek_daily_BQ <- read_csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_creek_daily_BQ2.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y")))
#sum components of bq data
BQ_daily <- madsen_creek_daily_BQ# aggregate(cfs ~ Date,madsen_creek_daily_BQ,sum )
BQ_daily$cfs <- BQ_daily$Q*4.08734569e-7#convert to cfs
#ggplot(madsen_creek_daily_BQ)+geom_line(aes(x=Date,y=cfs),color="red",alpha=0.5)+geom_line(data = kc_daily,
#                                                                    aes(x=`Collect Date (local)`, y = `Discharge (cfs)`),color="blue")
library(hydroTSM)
madsen_wwhm_daily <- read.csv("~/repos/stormwaterheatmap-master/hydrology/data/madsen_wwhm_daily2.txt", sep="", stringsAsFactors=FALSE)
madsen_wwhm_daily$date_formatted <- (gsub(",","",madsen_wwhm_daily$Date))%>%
parse_date(format = "%Y/%m/%d")
#get common dates
#
#result <- merge(dates, test, by.y = "date", by.x = "date", all.x = TRUE)
allQs <- merge(kc_daily,BQ_daily,by.x = "Collect Date (local)",by.y = "date",all.x = TRUE) %>%
merge(madsen_wwhm_daily,by.x = "Collect Date (local)",by.y = "date_formatted",all.x = TRUE)%>%
dplyr::select(c(measured = `Discharge (cfs)`,wwhm=X801.cfs,hspy=cfs))
fcdVals <- fdc(allQs, ylim = c(2,100),xlim=c(0.005,0.3),log="y",lQ.thr = 0.5,main = "Flow Duration Curve- Madsen Creek, King County", ylab="Q, (cfs)",yat=c(2,5,10),thr.shw=FALSE)
dt(madsen)
madsen <- read_csv("data/madsen.csv", col_types = cols(hruName_1 = col_skip(),
X8 = col_skip(), X9 = col_skip(), X10 = col_skip(),
X11 = col_skip()))
dt(madsen)
DT::datatable(madsen)
?axis.text
library(ggplot2)
?axis
?theme
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
flow_index_out <- read_csv("data/flow_index_out.csv")
ggplot(flow_index_out)+geom_histogram(aes(y=Qtotal))
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
